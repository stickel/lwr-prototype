class l{constructor(i){var t,e;this.importURICache=new Map,this.modifiers="",this.normalizeMetadata(i),this.mappingEndpoint=(i==null?void 0:i.importMappings)||(t=i==null?void 0:i.endpoints)===null||t===void 0?void 0:t.uris.mapping,((e=i==null?void 0:i.endpoints)===null||e===void 0?void 0:e.modifiers)&&(this.modifiers=Object.entries(i.endpoints.modifiers).reduce((o,[r,n])=>o+=`${r}=${n}&`,"?"))}normalizeMetadata(i){if(i&&i.imports)for(const[t,e]of Object.entries(i.imports))t&&e&&(Array.isArray(e)?e:[]).forEach(r=>{this.importURICache.set(r,t)})}async fetchMappings(i){const t=`${this.mappingEndpoint}${encodeURIComponent(i)}${this.modifiers}`,e=await globalThis.fetch(t);if(e.ok){const o=await e.json();this.normalizeMetadata(o)}}async resolve(i){let t=this.importURICache.get(i);return!t&&this.mappingEndpoint&&(await this.fetchMappings(i),t=this.importURICache.get(i)),t}}class m{constructor(i){this.importURICache=i&&i.imports?i:{imports:{}}}legacyResolve(i){return this.importURICache.imports[i]}}let p,a,d;function u(s){p=s;const{imports:i,index:t,importMappings:e,endpoints:o}=s;a=new l({imports:i,index:t,endpoints:o,importMappings:e}),d=new m(e)}async function c(s,i){return import(await h(s,i))}async function h(s,i){let t;if(!a||!d)throw new Error("The ESM Loader was not initialized");if(t=await a.resolve(s),t||(t=d.legacyResolve(s),t))return t;if(t=s,t.indexOf("://")<0&&!t.startsWith("/")){const{endpoints:e}=p;e&&e.uris&&e.uris.module&&(t=e.uris.module+encodeURIComponent(s),i&&(t+=`?importer=${encodeURIComponent(i)}`),e.modifiers&&(t+=Object.entries(e.modifiers).reduce((o,[r,n])=>o+=`${r}=${n}&`,i?"&":"?")))}return t}export{u as init,c as load};
